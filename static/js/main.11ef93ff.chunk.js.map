{"version":3,"sources":["index.js"],"names":["todo","state","action","type","id","text","completed","todoApp","combineReducers","todos","undefined","map","t","visibilityFilter","filter","FilterLink","connect","ownProps","active","dispatch","onClick","children","href","e","preventDefault","Footer","Todo","style","textDecoration","nextTodoId","AddTodo","input","ref","node","value","getVisibleTodos","VisibleTodoList","onTodoClick","toggleTodo","key","TodoApp","ReactDOM","render","store","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.11ef93ff.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { combineReducers } from \"redux\";\n\n//reducer一号的孩子\nconst todo = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false,\n      };\n    case \"TOGGLE_TODO\":\n      if (state.id !== action.id) {\n        return state;\n      }\n\n      return {\n        ...state,\n        completed: !state.completed,\n      };\n    default:\n      return state;\n  }\n};\n\n//reducer一号\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        //undefined?\n        todo(undefined, action),\n      ];\n    case \"TOGGLE_TODO\":\n      return state.map((t) => todo(t, action));\n    default:\n      return state;\n  }\n};\n\n//reducer二号\nconst visibilityFilter = (state = \"SHOW_ALL\", action) => {\n  switch (action.type) {\n    case \"SET_VISIBILITY_FILTER\":\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\n//reducer大家庭\nconst todoApp = combineReducers({\n  todos,\n  visibilityFilter,\n});\n//为什么不写 {\n//  todos:todos,\n//  visibilityFilter:visibilityFilter\n//  } 一开始写了又删掉了 15集\n\n//presentational component\n// provides data and behavior to presentational component\n//children从哪里传入的？\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>;\n  }\n  return (\n    <a\n      href=\"#\"\n      onClick={(e) => {\n        e.preventDefault();\n        onClick();\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\n//sction creator\nconst setVisibilityFilter = (filter) => {\n  return {\n    type: \"SET_VISIBILITY_FILTER\",\n    filter,\n  };\n};\nconst mapStateToLinkProps = (state, ownProps) => {\n  return {\n    active: ownProps.filter === state.visibilityFilter,\n  };\n};\nconst mapDispatchToLinkProps = (dispatch, ownProps) => {\n  return {\n    onClick: () => {\n      dispatch(setVisibilityFilter(ownProps.filter));\n    },\n  };\n};\nconst FilterLink = connect(mapStateToLinkProps, mapDispatchToLinkProps)(Link);\n\nconst Footer = () => (\n  //这里<FilterLink />居然写三遍，如何简化？\n  <p>\n    Show:\n    <FilterLink filter=\"SHOW_ALL\">All</FilterLink>\n    {\", \"}\n    <FilterLink filter=\"SHOW_ACTIVE\">Active</FilterLink>\n    {\", \"}\n    <FilterLink filter=\"SHOW_COMPLETED\">Completed</FilterLink>\n  </p>\n);\n\n//todo functional component, presentational component\n//doesn't specify any behavior\n//doesn't know what to do\n//specifies how the component looks in different cases\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? \"line-through\" : \"none\",\n    }}\n  >\n    {text}\n  </li>\n);\n\n//presentational component\nconst TodoList = ({ todos, onTodoClick }) => (\n  <ol>\n    {todos.map((todo) => (\n      <Todo key={todo.id} {...todo} onClick={() => onTodoClick(todo.id)} />\n    ))}\n  </ol>\n);\n\n//action creator\nlet nextTodoId = 0;\nconst addTodo = (text) => {\n  return {\n    type: \"ADD_TODO\",\n    id: nextTodoId++,\n    text: text,\n  };\n};\n\nlet AddTodo = ({ dispatch }) => {\n  let input;\n  return (\n    <div>\n      <input\n        ref={(node) => {\n          input = node;\n        }}\n      />\n      <button\n        onClick={() => {\n          dispatch(addTodo(input.value));\n          input.value = \"\";\n        }}\n      >\n        Add Todo\n      </button>\n    </div>\n  );\n};\nAddTodo = connect()(AddTodo);\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case \"SHOW_ALL\":\n      return todos;\n    case \"SHOW_COMPLETED\":\n      return todos.filter((t) => t.completed);\n    case \"SHOW_ACTIVE\":\n      return todos.filter((t) => !t.completed);\n    default:\n      return todos;\n  }\n};\n\n//action creator\nconst toggleTodo = (id) => {\n  return {\n    type: \"TOGGLE_TODO\",\n    id,\n  };\n};\nconst mapStateToTodoListProps = (state) => {\n  return {\n    todos: getVisibleTodos(state.todos, state.visibilityFilter),\n  };\n};\nconst mapDispatchToTodoListProps = (dispatch) => {\n  return {\n    onTodoClick: (id) => dispatch(toggleTodo(id)),\n  };\n};\nconst VisibleTodoList = connect(\n  mapStateToTodoListProps,\n  mapDispatchToTodoListProps\n)(TodoList);\n\n//single container component\n//specifies behavior\n//Dan abramov prefers to turn class components into functional components when possible\nconst TodoApp = () => (\n  <div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n);\n\nReactDOM.render(\n  <Provider store={createStore(todoApp)}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n//Dan Abramov suggestions:\n//1. extracting presentational components\n//if there is too much props to pass then\n//2. write container components around to specifies the behavior and reduce the complexity\n"],"sourceRoot":""}